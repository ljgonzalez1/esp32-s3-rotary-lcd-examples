; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; ========================= REUSABLE BASE SECTIONS =========================
; These are NOT buildable; they only provide values to be extended.

[__base-core]
platform  = espressif32@6.9.0
board     = esp32-s3-devkitc-1
framework = arduino

[__base-pkgs]
; Arduino core 3.x (avoids crc32_le error)
platform_packages =
    framework-arduinoespressif32@>=3.0.7
    tool-esptoolpy

[__base-host]
upload_port = /dev/ttyACM0

[__base-serial]
upload_port     = ${__base-host.upload_port}
monitor_port    = ${__base-host.upload_port}
monitor_filters = default, time, colorize, esp32_exception_decoder, send_on_enter
upload_protocol = esptool
monitor_dtr     = 0
monitor_rts     = 0

[__base-board]
; Flash and PSRAM in QSPI (WROOM-1 N16R8)
board_build.flash_mode = qio
board_build.arduino.memory_type = qio_qspi
board_build.psram_type = qio
board_build.cppstd = gnu++17
board_build.filesystem = littlefs
board_upload.maximum_ram_size = 8388608
board_upload.maximum_size = 16777216
board_upload.flash_size = 16MB

upload_speed = 921600
monitor_speed= 115200

board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
board_build.flash_size = 16MB

[__knob-all-libs]
lib_extra_dirs =
    ./third_party/viewesmart-md80esp32-knob-2.1inch-fork/Libraries

[__libs]
lib_extra_dirs =
    ${__knob-all-libs.lib_extra_dirs}

[__lib_flags]
build_flags =
;    -I third_party/viewesmart-md80esp32-knob-2.1inch-fork/Libraries/ESP32_IO_Expander/src
;    -I third_party/viewesmart-md80esp32-knob-2.1inch-fork/Libraries/esp-lib-utils/src

lib_ldf_mode = deep+

[__base-flags]
; Must compile with gnu++17
build_unflags =
    -std=gnu++9 -std=gnu++10 -std=gnu++11 -std=gnu++12 -std=gnu++13 -std=gnu++14              -std=gnu++2a -std=gnu++20
    -std=c++9   -std=c++10   -std=c++11   -std=c++12   -std=c++13   -std=c++14   -std=c++17   -std=c++2a -std=C++20
build_flags =
    -std=gnu++17
    -DARDUHAL_LOG_COLORS=1
    -DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT=1
    -DBOARD_HAS_PSRAM
    -DCONFIG_SPIRAM_USE=1 -DCONFIG_SPIRAM_USE_CAPS_ALLOC=1
    -DCORE_DEBUG_LEVEL=0
    -DESP_PANEL_KCONFIG_IGNORE
    -DLV_CONF_INCLUDE_SIMPLE


[__base-scripts]
extra_scripts = pre:scripts/ensure_python_deps.py

; ---- test harness ----
[__profile-test]
test_framework = unity
test_transport = serial
test_build_src = no
; Selection is done by macros with a single runner:
;   -DTEST_OTA_DEV

; ---- ota profile ----

[__profile-ota]
board_build.partitions = partitions/partitions_16mb_ota.csv

[__compressed-flags]
build_unflags = ${__base-flags.build_unflags} -Os -O0 -Og
build_flags =
    ${__base-flags.build_flags}
    ${__lib_flags.build_flags}
    -O3
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections


[__uncompressed-flags]
build_unflags = ${__base-flags.build_unflags} -O1 -O2 -O3
build_flags =
    ${__base-flags.build_flags}
    ${__lib_flags.build_flags}
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -O0
    -g3



; ============================== REAL ENVIRONMENTS ==============================

[env:esp32-s3-n16-r8-ota-dev]
extends = __base-core, __base-pkgs, __base-serial, __base-scripts, __base-board, __base-flags, __profile-ota, __libs, __uncompressed-flags

[env:esp32-s3-n16-r8-ota-prod]
extends = __base-core, __base-pkgs, __base-serial, __base-scripts, __base-board, __base-flags, __profile-ota, __libs, __compressed-flags

[env:esp32-s3-n16-r8-ota-test]
extends = __base-core, __base-pkgs, __base-serial, __base-scripts, __base-board, __base-flags, __profile-ota, __libs, __compressed-flags, __profile-test

; ============================== DEFAULT ENV ==============================

[env:esp32s3-dev]
extends = env:esp32-s3-n16-r8-ota-dev

[env:esp32s3-test]
extends = env:esp32-s3-n16-r8-ota-test

[env:esp32s3-prod]
extends = env:esp32-s3-n16-r8-ota-prod

[env:esp32s3usbotg]
extends = env:esp32s3-dev

[platformio]
default_envs = esp32s3usbotg
